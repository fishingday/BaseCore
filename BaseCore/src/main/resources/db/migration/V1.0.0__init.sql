drop table account if exists;

drop table resources if exists;

drop table role if exists;

drop table role_resources if exists;

drop table user_roles if exists;

drop sequence if exists hibernate_sequence;

create sequence hibernate_sequence start with 1 increment by 1;

create table account (
   id bigint not null,
	age integer,
	email varchar(255),
	password varchar(255),
	username varchar(255),
	primary key (id)
);

create table resources (
   resource_id bigint not null,
	http_method varchar(255),
	order_num integer,
	resource_name varchar(255),
	resource_type varchar(255),
	primary key (resource_id)
);

create table role (
   role_id bigint not null,
	role_desc varchar(255),
	role_name varchar(255),
	primary key (role_id)
);

create table role_resources (
   resource_id bigint not null,
	role_id bigint not null,
	primary key (resource_id, role_id)
);

create table user_roles (
   user_id bigint not null,
	role_id bigint not null,
	primary key (user_id, role_id)
);

alter table role_resources 
   add constraint FK7k960kk6pu1pwsk7ml4hycp53 
   foreign key (role_id) 
   references role;
   
alter table role_resources 
   add constraint FK8k22y1jmevnedy4v80tl1yop7 
   foreign key (resource_id) 
   references resources;
   
alter table user_roles 
   add constraint FKrhfovtciq1l558cw6udg0h0d3 
   foreign key (role_id) 
   references role;
   
alter table user_roles 
   add constraint FKn6rghlrxo1uta1ffpj0puglmp 
   foreign key (user_id) 
   references account;
   
   
CREATE TABLE CM_CD_DTL
(
	CD_DTL_SEQ            BIGINT  NOT NULL ,
	GRP_CD_SEQ            BIGINT  NOT NULL ,
	CD                    VARCHAR(35)  NOT NULL ,
	CD_NM                 VARCHAR(300)  NOT NULL ,
	CD_DESC               VARCHAR(2000)  NULL ,
	OPT_1                 VARCHAR(256)  NULL ,
	OPT_2                 VARCHAR(256)  NULL ,
	OPT_3                 VARCHAR(256)  NULL ,
	OPT_4                 VARCHAR(256)  NULL ,
	OPT_5                 VARCHAR(256)  NULL ,
	PRNT_ORD              INTEGER  NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_CD_DTL ON CM_CD_DTL
(CD_DTL_SEQ  ASC);



ALTER TABLE CM_CD_DTL
	ADD CONSTRAINT  PK_CM_CD_DTL PRIMARY KEY (CD_DTL_SEQ);



CREATE TABLE CM_GRP_CD
(
	GRP_CD_SEQ            BIGINT  NOT NULL ,
	GRP_CD                VARCHAR(35)  NOT NULL ,
	GRP_CD_NM             VARCHAR(300)  NOT NULL ,
	GRP_CD_DESC           VARCHAR(2000)  NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_GRP_CD ON CM_GRP_CD
(GRP_CD_SEQ  ASC);



ALTER TABLE CM_GRP_CD
	ADD CONSTRAINT  PK_CM_GRP_CD PRIMARY KEY (GRP_CD_SEQ);



CREATE TABLE CM_MENU
(
	MENU_SEQ              BIGINT  NOT NULL ,
	UP_MENU_SEQ           BIGINT  NULL ,
	MENU_NM               VARCHAR(300)  NOT NULL ,
	MENU_PATH             VARCHAR(255)  NULL ,
	MENU_DESC             VARCHAR(2000)  NULL ,
	ICON_URL              VARCHAR(255)  NULL ,
	PRNT_YN               CHAR(1)   DEFAULT  'N' NOT NULL ,
	PRNT_ORD              INTEGER  NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_MENU ON CM_MENU
(MENU_SEQ  ASC);



ALTER TABLE CM_MENU
	ADD CONSTRAINT  PK_CM_MENU PRIMARY KEY (MENU_SEQ);



CREATE TABLE CM_MENU_DTL_ROLE_MAP
(
	MENU_DTL_SEQ          BIGINT  NOT NULL ,
	MENU_SEQ              BIGINT  NOT NULL ,
	ROLE_SEQ              BIGINT  NOT NULL ,
	MENU_DTL_PATH         VARCHAR(255)  NOT NULL ,
	MENU_DTL_METH_CD      VARCHAR(128)  NOT NULL ,
	MENU_DTL_NM           VARCHAR(300)  NOT NULL ,
	MENU_DTL_DESC         VARCHAR(2000)  NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_MENU_DTL_ROLE_MAP ON CM_MENU_DTL_ROLE_MAP
(MENU_DTL_SEQ  ASC);



ALTER TABLE CM_MENU_DTL_ROLE_MAP
	ADD CONSTRAINT  PK_CM_MENU_DTL_ROLE_MAP PRIMARY KEY (MENU_DTL_SEQ);



CREATE INDEX IDX2_CM_MENU_DTL_ROLE_MAP ON CM_MENU_DTL_ROLE_MAP
(ROLE_SEQ  ASC);



CREATE INDEX IDX3_CM_MENU_DTL_ROLE_MAP ON CM_MENU_DTL_ROLE_MAP
(MENU_SEQ  ASC);



CREATE TABLE CM_NOTI
(
	NOTI_SEQ              BIGINT  NOT NULL ,
	NOTI_TITL             VARCHAR(200)  NOT NULL ,
	NOTI_CONT             VARCHAR(20000)  NULL ,
	NOTI_SEND_GRD_CD      VARCHAR(35)  NOT NULL ,
	NOTI_SEND_DT          TIMESTAMP  NOT NULL ,
	NOTI_END_DT           TIMESTAMP  NULL ,
	SEND_MEDIA_TYP_VAL    VARCHAR(128)  NOT NULL ,
	SEND_YN               CHAR(1)   DEFAULT  'N' NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL ,
	NOTI_LNK_ADDR         VARCHAR(300)  NULL 
);



CREATE UNIQUE INDEX PK_CM_NOTI ON CM_NOTI
(NOTI_SEQ  ASC);



ALTER TABLE CM_NOTI
	ADD CONSTRAINT  PK_CM_NOTI PRIMARY KEY (NOTI_SEQ);



CREATE TABLE CM_NOTI_USER_MAP
(
	NOTI_USER_MAP_SEQ     BIGINT  NOT NULL ,
	USER_SEQ              BIGINT  NOT NULL ,
	NOTI_SEQ              BIGINT  NOT NULL ,
	SEND_MEDIA_TYP_CD     VARCHAR(35)  NOT NULL ,
	VIEW_CNT              INTEGER  NULL ,
	CLOSE_YN              CHAR(1)   DEFAULT  'N' NOT NULL ,
	QRY_DT                TIMESTAMP  NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_NOTI_USER_MAP ON CM_NOTI_USER_MAP
(NOTI_USER_MAP_SEQ  ASC);



ALTER TABLE CM_NOTI_USER_MAP
	ADD CONSTRAINT  PK_CM_NOTI_USER_MAP PRIMARY KEY (NOTI_USER_MAP_SEQ);



CREATE INDEX IDX1_CM_NOTI_USER_MAP ON CM_NOTI_USER_MAP
(USER_SEQ  ASC);



CREATE INDEX IDX2_CM_NOTI_USER_MAP ON CM_NOTI_USER_MAP
(NOTI_SEQ  ASC);



CREATE TABLE CM_ROLE
(
	ROLE_SEQ              BIGINT  NOT NULL ,
	ROLE_DESC             VARCHAR(2000)  NULL ,
	ROLE_NM               VARCHAR(300)  NOT NULL ,
	ROLE_CD               VARCHAR(35)  NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_ROLE ON CM_ROLE
(ROLE_SEQ  ASC);



ALTER TABLE CM_ROLE
	ADD CONSTRAINT  PK_CM_ROLE PRIMARY KEY (ROLE_SEQ);



CREATE TABLE CM_ROLE_CHG_LOG
(
	ROLE_CHG_LOG_SEQ      BIGINT  NOT NULL ,
	ROLE_CHG_CONT         VARCHAR(20000)  NULL ,
	ROLE_CHG_REASON       VARCHAR(4000)  NULL ,
	USER_SEQ              BIGINT  NOT NULL ,
	ROLE_SEQ              BIGINT  NOT NULL ,
	ROLE_CHG_CD           VARCHAR(35)  NOT NULL ,
	EXCUTOR_SEQ           BIGINT  NOT NULL ,
	ROLE_CHG_DT           TIMESTAMP  NOT NULL 
);



CREATE UNIQUE INDEX PK_CM_ROLE_CHG_LOG ON CM_ROLE_CHG_LOG
(ROLE_CHG_LOG_SEQ  ASC);



ALTER TABLE CM_ROLE_CHG_LOG
	ADD CONSTRAINT  PK_CM_ROLE_CHG_LOG PRIMARY KEY (ROLE_CHG_LOG_SEQ);



CREATE INDEX IDX1_CM_ROLE_CHG_LOG ON CM_ROLE_CHG_LOG
(ROLE_SEQ  ASC);



CREATE INDEX IDX2_CM_ROLE_CHG_LOG ON CM_ROLE_CHG_LOG
(USER_SEQ  ASC);



CREATE TABLE CM_ROLE_MENU_MAP
(
	ROLE_SEQ              BIGINT  NOT NULL ,
	MENU_SEQ              BIGINT  NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_ROLE_MENU_MAP ON CM_ROLE_MENU_MAP
(ROLE_SEQ  ASC,MENU_SEQ  ASC);



ALTER TABLE CM_ROLE_MENU_MAP
	ADD CONSTRAINT  PK_CM_ROLE_MENU_MAP PRIMARY KEY (ROLE_SEQ,MENU_SEQ);



CREATE TABLE CM_USER
(
	USER_SEQ              BIGINT  NOT NULL ,
	LOGIN_ID              VARCHAR(200)  NULL ,
	USER_NM               VARCHAR(300)  NOT NULL ,
	USER_TEL_NO           VARCHAR(300)  NULL ,
	USER_STAT_CD          VARCHAR(35)  NOT NULL ,
	LOGIN_DT              TIMESTAMP  NULL ,
	LOGIN_FAIL_CNT        INTEGER  NULL ,
	LAST_LOGIN_IP         VARCHAR(20)  NULL ,
	ACUNT_EXP_DT          TIMESTAMP  NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPD_DT                TIMESTAMP  NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL 
);



CREATE UNIQUE INDEX PK_CM_USER ON CM_USER
(USER_SEQ  ASC);



ALTER TABLE CM_USER
	ADD CONSTRAINT  PK_CM_USER PRIMARY KEY (USER_SEQ);



CREATE UNIQUE INDEX UK1_CM_USER ON CM_USER
(LOGIN_ID  ASC);



CREATE TABLE CM_USER_ACCES_LOG
(
	USER_ACCES_LOG_SEQ    BIGINT  NOT NULL ,
	UP_ACCES_LOG_SEQ      BIGINT  NULL ,
	REQ_URL               VARCHAR(255)  NULL ,
	REQ_IP                VARCHAR(20)  NULL ,
	HTTP_METHOD_CD        VARCHAR(35)  NOT NULL ,
	USER_LOG_TYP_CD       VARCHAR(35)  NOT NULL ,
	LOG_GRD_CD            VARCHAR(35)  NOT NULL ,
	USER_LOG_RSLT_CD      VARCHAR(35)  NOT NULL ,
	DTL_CONT              VARCHAR(4000)  NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	HTTP_STAT_NO          VARCHAR2(20)  NULL ,
	STAT_CONT             VARCHAR2(255)  NULL 
);



CREATE UNIQUE INDEX PK_CM_USER_ACCES_LOG ON CM_USER_ACCES_LOG
(USER_ACCES_LOG_SEQ  DESC);



ALTER TABLE CM_USER_ACCES_LOG
	ADD CONSTRAINT  PK_CM_USER_ACCES_LOG PRIMARY KEY (USER_ACCES_LOG_SEQ);



CREATE TABLE CM_USER_ALOW_IP
(
	USER_ALOW_IP_SEQ      BIGINT  NOT NULL ,
	USER_SEQ              BIGINT  NOT NULL ,
	ALOW_IP               VARCHAR(20)  NOT NULL ,
	ALOW_IP_DESC          VARCHAR(2000)  NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_USER_ALOW_IP ON CM_USER_ALOW_IP
(USER_ALOW_IP_SEQ  ASC);



ALTER TABLE CM_USER_ALOW_IP
	ADD CONSTRAINT  PK_CM_USER_ALOW_IP PRIMARY KEY (USER_ALOW_IP_SEQ);



CREATE TABLE CM_USER_BOOKMARK
(
	USER_SEQ              BIGINT  NOT NULL ,
	ROLE_SEQ              BIGINT  NOT NULL ,
	MENU_SEQ              BIGINT  NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_USER_BOOKMARK ON CM_USER_BOOKMARK
(USER_SEQ  ASC,ROLE_SEQ  ASC,MENU_SEQ  ASC);



ALTER TABLE CM_USER_BOOKMARK
	ADD CONSTRAINT  PK_CM_USER_BOOKMARK PRIMARY KEY (USER_SEQ,ROLE_SEQ,MENU_SEQ);



CREATE INDEX IDX1_CM_USER_BOOKMARK ON CM_USER_BOOKMARK
(USER_SEQ  ASC);



CREATE INDEX IDX2_CM_USER_BOOKMARK ON CM_USER_BOOKMARK
(ROLE_SEQ  ASC);



CREATE INDEX IDX3_CM_USER_BOOKMARK ON CM_USER_BOOKMARK
(ROLE_SEQ  ASC,MENU_SEQ  ASC);



CREATE TABLE CM_USER_PWD
(
	USER_PWD_SEQ          BIGINT  NOT NULL ,
	USER_SEQ              BIGINT  NOT NULL ,
	USER_PWD              VARCHAR(256)  NOT NULL ,
	PWD_EXP_DAY           CHAR(8)  NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_USER_PWD ON CM_USER_PWD
(USER_PWD_SEQ  ASC);



ALTER TABLE CM_USER_PWD
	ADD CONSTRAINT  PK_CM_USER_PWD PRIMARY KEY (USER_PWD_SEQ);



CREATE TABLE CM_USER_ROLE_MAP
(
	USER_SEQ              BIGINT  NOT NULL ,
	ROLE_SEQ              BIGINT  NOT NULL ,
	DEL_YN                CHAR(1)   DEFAULT  'N' NOT NULL ,
	CREATOR_SEQ           BIGINT  NOT NULL ,
	CRE_DT                TIMESTAMP  NOT NULL ,
	UPDATOR_SEQ           BIGINT  NULL ,
	UPD_DT                TIMESTAMP  NULL 
);



CREATE UNIQUE INDEX PK_CM_USER_ROLE_MAP ON CM_USER_ROLE_MAP
(USER_SEQ  ASC,ROLE_SEQ  ASC);



ALTER TABLE CM_USER_ROLE_MAP
	ADD CONSTRAINT  PK_CM_USER_ROLE_MAP PRIMARY KEY (USER_SEQ,ROLE_SEQ);



COMMENT ON TABLE CM_CD_DTL IS '공통 코드 상세';
COMMENT ON COLUMN CM_CD_DTL.CD_DTL_SEQ IS '코드 상세 순번';
COMMENT ON COLUMN CM_CD_DTL.GRP_CD_SEQ IS '그룹 코드 순번';
COMMENT ON COLUMN CM_CD_DTL.CD IS '코드';
COMMENT ON COLUMN CM_CD_DTL.CD_NM IS '코드 명';
COMMENT ON COLUMN CM_CD_DTL.CD_DESC IS '코드 설명';
COMMENT ON COLUMN CM_CD_DTL.OPT_1 IS '옵션 1';
COMMENT ON COLUMN CM_CD_DTL.OPT_2 IS '옵션 2';
COMMENT ON COLUMN CM_CD_DTL.OPT_3 IS '옵션 3';
COMMENT ON COLUMN CM_CD_DTL.OPT_4 IS '옵션 4';
COMMENT ON COLUMN CM_CD_DTL.OPT_5 IS '옵션 5';
COMMENT ON COLUMN CM_CD_DTL.PRNT_ORD IS '출력 순서';
COMMENT ON COLUMN CM_CD_DTL.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_CD_DTL.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_CD_DTL.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_CD_DTL.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_CD_DTL.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_GRP_CD IS '공통 그룹 코드';
COMMENT ON COLUMN CM_GRP_CD.GRP_CD_SEQ IS '그룹 코드 순번';
COMMENT ON COLUMN CM_GRP_CD.GRP_CD IS '그룹 코드';
COMMENT ON COLUMN CM_GRP_CD.GRP_CD_NM IS '그룹 코드 명';
COMMENT ON COLUMN CM_GRP_CD.GRP_CD_DESC IS '그룹 코드 설명';
COMMENT ON COLUMN CM_GRP_CD.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_GRP_CD.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_GRP_CD.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_GRP_CD.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_GRP_CD.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_MENU IS '공통 메뉴';
COMMENT ON COLUMN CM_MENU.MENU_SEQ IS '메뉴 순번';
COMMENT ON COLUMN CM_MENU.UP_MENU_SEQ IS '상위 메뉴 순번';
COMMENT ON COLUMN CM_MENU.MENU_NM IS '메뉴 명';
COMMENT ON COLUMN CM_MENU.MENU_PATH IS '메뉴 경로';
COMMENT ON COLUMN CM_MENU.MENU_DESC IS '메뉴 설명';
COMMENT ON COLUMN CM_MENU.ICON_URL IS '아이콘 URL';
COMMENT ON COLUMN CM_MENU.PRNT_YN IS '출력 여부';
COMMENT ON COLUMN CM_MENU.PRNT_ORD IS '출력 순서';
COMMENT ON COLUMN CM_MENU.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_MENU.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_MENU.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_MENU.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_MENU.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_MENU_DTL_ROLE_MAP IS '공통 메뉴 상세 역할 맵핑';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.MENU_DTL_SEQ IS '메뉴 상세 순번';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.MENU_SEQ IS '메뉴 순번';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.ROLE_SEQ IS '역할 순번';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.MENU_DTL_PATH IS '메뉴 상세 경로';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.MENU_DTL_METH_CD IS '메뉴 상세 방법 코드';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.MENU_DTL_NM IS '메뉴 상세 명';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.MENU_DTL_DESC IS '메뉴 상세 설명';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_MENU_DTL_ROLE_MAP.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_NOTI IS '공통 공지';
COMMENT ON COLUMN CM_NOTI.NOTI_SEQ IS '공지 순번';
COMMENT ON COLUMN CM_NOTI.NOTI_TITL IS '공지 제목';
COMMENT ON COLUMN CM_NOTI.NOTI_CONT IS '공지 내용';
COMMENT ON COLUMN CM_NOTI.NOTI_SEND_GRD_CD IS '공지 발송 등급 코드';
COMMENT ON COLUMN CM_NOTI.NOTI_SEND_DT IS '공지 발송 일시';
COMMENT ON COLUMN CM_NOTI.NOTI_END_DT IS '공지 종료 일시';
COMMENT ON COLUMN CM_NOTI.SEND_MEDIA_TYP_VAL IS '발송 매체 구분 값';
COMMENT ON COLUMN CM_NOTI.SEND_YN IS '발송 여부';
COMMENT ON COLUMN CM_NOTI.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_NOTI.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_NOTI.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_NOTI.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_NOTI.UPD_DT IS '수정 일시';
COMMENT ON COLUMN CM_NOTI.NOTI_LNK_ADDR IS '공지 연결 주소';

COMMENT ON TABLE CM_NOTI_USER_MAP IS '공통 공지 사용자 맵핑';
COMMENT ON COLUMN CM_NOTI_USER_MAP.NOTI_USER_MAP_SEQ IS '공지 사용자 맵핑 순번';
COMMENT ON COLUMN CM_NOTI_USER_MAP.USER_SEQ IS '사용자 순번';
COMMENT ON COLUMN CM_NOTI_USER_MAP.NOTI_SEQ IS '공지 순번';
COMMENT ON COLUMN CM_NOTI_USER_MAP.SEND_MEDIA_TYP_CD IS '발송 매체 구분 코드';
COMMENT ON COLUMN CM_NOTI_USER_MAP.VIEW_CNT IS '표시 수';
COMMENT ON COLUMN CM_NOTI_USER_MAP.CLOSE_YN IS '닫기 여부';
COMMENT ON COLUMN CM_NOTI_USER_MAP.QRY_DT IS '조회 일시';
COMMENT ON COLUMN CM_NOTI_USER_MAP.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_NOTI_USER_MAP.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_NOTI_USER_MAP.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_NOTI_USER_MAP.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_NOTI_USER_MAP.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_ROLE IS '공통 역할';
COMMENT ON COLUMN CM_ROLE.ROLE_SEQ IS '역할 순번';
COMMENT ON COLUMN CM_ROLE.ROLE_DESC IS '역할 설명';
COMMENT ON COLUMN CM_ROLE.ROLE_NM IS '역할 명';
COMMENT ON COLUMN CM_ROLE.ROLE_CD IS '역할 코드';
COMMENT ON COLUMN CM_ROLE.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_ROLE.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_ROLE.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_ROLE.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_ROLE.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_ROLE_CHG_LOG IS '공통 역할 변경 로그';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.ROLE_CHG_LOG_SEQ IS '역할 변경 로그 순번';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.ROLE_CHG_CONT IS '역할 변경 내용';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.ROLE_CHG_REASON IS '역할 변경 사유';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.USER_SEQ IS '사용자 순번';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.ROLE_SEQ IS '역할 순번';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.ROLE_CHG_CD IS '역할 변경 코드';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.EXCUTOR_SEQ IS '집행자 순번';
COMMENT ON COLUMN CM_ROLE_CHG_LOG.ROLE_CHG_DT IS '역할 변경 일시';

COMMENT ON TABLE CM_ROLE_MENU_MAP IS '공통 역할 메뉴 맵핑';
COMMENT ON COLUMN CM_ROLE_MENU_MAP.ROLE_SEQ IS '역할 순번';
COMMENT ON COLUMN CM_ROLE_MENU_MAP.MENU_SEQ IS '메뉴 순번';
COMMENT ON COLUMN CM_ROLE_MENU_MAP.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_ROLE_MENU_MAP.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_ROLE_MENU_MAP.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_ROLE_MENU_MAP.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_ROLE_MENU_MAP.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_USER IS '공통 사용자';
COMMENT ON COLUMN CM_USER.USER_SEQ IS '사용자 순번';
COMMENT ON COLUMN CM_USER.LOGIN_ID IS '로그인 아이디';
COMMENT ON COLUMN CM_USER.USER_NM IS '사용자 명';
COMMENT ON COLUMN CM_USER.USER_TEL_NO IS '사용자 전화 번호';
COMMENT ON COLUMN CM_USER.USER_STAT_CD IS '사용자 상태 코드';
COMMENT ON COLUMN CM_USER.LOGIN_DT IS '로그인 일시';
COMMENT ON COLUMN CM_USER.LOGIN_FAIL_CNT IS '로그인 실패 수';
COMMENT ON COLUMN CM_USER.LAST_LOGIN_IP IS '최종 로그인 IP';
COMMENT ON COLUMN CM_USER.ACUNT_EXP_DT IS '계정 만료 일시';
COMMENT ON COLUMN CM_USER.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_USER.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_USER.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_USER.UPD_DT IS '수정 일시';
COMMENT ON COLUMN CM_USER.DEL_YN IS '삭제 여부';

COMMENT ON TABLE CM_USER_ACCES_LOG IS '공통 사용자 접근 로그';
COMMENT ON COLUMN CM_USER_ACCES_LOG.USER_ACCES_LOG_SEQ IS '사용자 접근 로그 순번';
COMMENT ON COLUMN CM_USER_ACCES_LOG.UP_ACCES_LOG_SEQ IS '상위 접근 로그 순번';
COMMENT ON COLUMN CM_USER_ACCES_LOG.REQ_URL IS '요청 URL';
COMMENT ON COLUMN CM_USER_ACCES_LOG.REQ_IP IS '요청 IP';
COMMENT ON COLUMN CM_USER_ACCES_LOG.HTTP_METHOD_CD IS 'HTTP METHOD 코드';
COMMENT ON COLUMN CM_USER_ACCES_LOG.USER_LOG_TYP_CD IS '사용자 로그 구분 코드';
COMMENT ON COLUMN CM_USER_ACCES_LOG.LOG_GRD_CD IS '로그 등급 코드';
COMMENT ON COLUMN CM_USER_ACCES_LOG.USER_LOG_RSLT_CD IS '사용자 로그 결과 코드';
COMMENT ON COLUMN CM_USER_ACCES_LOG.DTL_CONT IS '상세 내용';
COMMENT ON COLUMN CM_USER_ACCES_LOG.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_USER_ACCES_LOG.HTTP_STAT_NO IS 'HTTP 상태 번호';
COMMENT ON COLUMN CM_USER_ACCES_LOG.STAT_CONT IS '상태 내용';

COMMENT ON TABLE CM_USER_ALOW_IP IS '공통 사용자 허용 IP';
COMMENT ON COLUMN CM_USER_ALOW_IP.USER_ALOW_IP_SEQ IS '사용자 허용 IP 순번';
COMMENT ON COLUMN CM_USER_ALOW_IP.USER_SEQ IS '사용자 순번';
COMMENT ON COLUMN CM_USER_ALOW_IP.ALOW_IP IS '허용 IP';
COMMENT ON COLUMN CM_USER_ALOW_IP.ALOW_IP_DESC IS '허용 IP 설명';
COMMENT ON COLUMN CM_USER_ALOW_IP.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_USER_ALOW_IP.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_USER_ALOW_IP.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_USER_ALOW_IP.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_USER_ALOW_IP.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_USER_BOOKMARK IS '공통 사용자 북마크';
COMMENT ON COLUMN CM_USER_BOOKMARK.USER_SEQ IS '사용자 순번';
COMMENT ON COLUMN CM_USER_BOOKMARK.ROLE_SEQ IS '역할 순번';
COMMENT ON COLUMN CM_USER_BOOKMARK.MENU_SEQ IS '메뉴 순번';
COMMENT ON COLUMN CM_USER_BOOKMARK.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_USER_BOOKMARK.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_USER_BOOKMARK.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_USER_BOOKMARK.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_USER_BOOKMARK.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_USER_PWD IS '공통 사용자 패스워드';
COMMENT ON COLUMN CM_USER_PWD.USER_PWD_SEQ IS '사용자 패스워드 순번';
COMMENT ON COLUMN CM_USER_PWD.USER_SEQ IS '사용자 순번';
COMMENT ON COLUMN CM_USER_PWD.USER_PWD IS '사용자 패스워드';
COMMENT ON COLUMN CM_USER_PWD.PWD_EXP_DAY IS '패스워드 만료 일자';
COMMENT ON COLUMN CM_USER_PWD.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_USER_PWD.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_USER_PWD.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_USER_PWD.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_USER_PWD.UPD_DT IS '수정 일시';

COMMENT ON TABLE CM_USER_ROLE_MAP IS '공통 사용자 역할 맵핑';
COMMENT ON COLUMN CM_USER_ROLE_MAP.USER_SEQ IS '사용자 순번';
COMMENT ON COLUMN CM_USER_ROLE_MAP.ROLE_SEQ IS '역할 순번';
COMMENT ON COLUMN CM_USER_ROLE_MAP.DEL_YN IS '삭제 여부';
COMMENT ON COLUMN CM_USER_ROLE_MAP.CREATOR_SEQ IS '생성자 순번';
COMMENT ON COLUMN CM_USER_ROLE_MAP.CRE_DT IS '생성 일시';
COMMENT ON COLUMN CM_USER_ROLE_MAP.UPDATOR_SEQ IS '수정자 순번';
COMMENT ON COLUMN CM_USER_ROLE_MAP.UPD_DT IS '수정 일시';
