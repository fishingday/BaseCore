1. implementation
   <html xmlns:th="http://www.thymeleaf.org"
         xmlns:sec="http://www.thymeleaf.org/extras/spring-security">
   
2. Spring Security + Thymeleaf 기능
   <!-- 인증되지 않은(로그인하지 않은) 사용자에게 보임 -->
   <button sec:authorize="isAnonymous()" type="button" onclick="location.href='/admin/loginView'">로그인</button>
   <!-- 인증된(로그인한) 사용자에게 보임 -->
   <button sec:authorize="isAuthenticated()" type="button" onclick="location.href='/admin/logout'">로그아웃</button>
   
   <!-- ROLE_ADMIN 권한을 가지고 있다면 보임 -->
   <div sec:authorize="hasRole('ADMIN')">ROLE_ADMIN 권한이 있습니다.</div>
   <!-- ROLE_SUB_ADMIN 권한을 가지고 있다면 보임 -->
   <div sec:authorize="hasRole('SUB_ADMIN')">ROLE_SUB_ADMIN 권한이 있습니다.</div>
   <!-- ROLE_USER 권한을 가지고 있다면 보임 -->
   <div sec:authorize="hasRole('USER')">ROLE_USER 권한이 있습니다.</div>
   <!-- ROLE_ADMIN 혹은 ROLE_SUB_ADMIN 권한을 가지고 있다면 보임 -->
   <div sec:authorize="hasAnyRole('ADMIN, SUB_ADMIN')">ROLE_ADMIN 혹은 ROLE_SUB_ADMIN 권한이 있습니다.</div>
   
   <br/>
   <!--인증시 사용된 객체에 대한 정보-->
   <b>Authenticated DTO:</b>
   <div sec:authorize="isAuthenticated()" sec:authentication="principal"></div>
   
   <br/>
   <!--인증시 사용된 객체의 Username (ID)-->
   <b>Authenticated username:</b>
   <div sec:authorize="isAuthenticated()" sec:authentication="name"></div>
   
   <br/>
   <!--객체의 권한-->
   <b>Authenticated admin role:</b>
   <div sec:authorize="isAuthenticated()" sec:authentication="principal.authorities"></div>
   
3. Principal 클래스 참조 사용 방법
   -  'th:value', 'th:text' 와 같이 사용하던대로 'sec:authentication' 를 앞에 붙이기만 하면 됩니다. 

4. SecurityExpressionRoot 참조하기
   <span sec:authorize="isAuthenticated()"></span> // 로그인하여 인증된 사용자
   <span sec:authorize="isAnonymous()"></span> // 로그인하지 않은 사용자
   <span sec:authorize="hasRole('ROLE_ADMIN')"></span> // ROLE_ADMIN을 가진 사용자
   <span sec:authorize="hasAnyRole('ROLE_ADMIN', 'ROLE_MANAGER')"></span> // ROLE_ADMIN 또는 ROLE_MANAGER 권한중 하나 이상 가진 사용자
   
   